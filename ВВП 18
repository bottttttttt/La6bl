#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <malloc.h>
#include <stdlib.h>
#include <math.h>

int main(void) {
int zzz,n,i,j,K,   min,max, mi,ma, perv,  nech, *A,*B;
float x, *BB;
printf ("Доброго времени суток\n");

  do{
    printf ("\n\nВведите номер задания (для выхода введите '0') : ");
    scanf ("%d", &zzz);

    switch( zzz )
    {
      case 1:
        printf("Введите размер массива: ");
        scanf("%d", &n); 
        if (n<0){ 
            printf ("ээх, давай по новой\n");
            break;
        }
        A = (int*)malloc(n * sizeof(int)); // Выделение памяти 
        for (i=0; i<n; i++){ //заполняем массив
          printf("A[%d] = ", i);
          scanf("%d", &A[i]);
        }
        printf("\n");
        B = (int*)malloc(n * sizeof(int)); // Выделение памяти 
        for (i=0; i<n; i++){ //заполняем массив
          printf("B[%d] = ", i);
          scanf("%d", &B[i]);
        }

        for (i=0; i<n; i++){
          K=A[i];
          A[i]=B[i];
          B[i]=K;
        }

        printf("теперь :\n");
        for (i=0; i<n; i++){
          printf("A[%d] = %d\n" ,i, A[i]);
        }
        for (i=0; i<n; i++){
          printf("\nB[%d] = %d" ,i, B[i]);
        }       
              
        break;

        case 2: 
        printf("Введите размер массива: ");
        scanf("%d", &n); 
        if (n<0){ 
            printf ("ээх, давай по новой\n");
            break;
        }
        A = (int*)malloc(n * sizeof(int)); // Выделение памяти 
        for (i=0; i<n; i++){ //заполняем массив
          printf("A[%d] = ", i);
          scanf("%d", &A[i]);
        }
     
        BB= (float*)malloc(n * sizeof(int)); // Выделение памяти 
        BB[0]=A[0];
        x=BB[0];
        for (i=1; i<n; i++){
          x=x+A[i];           
          BB[i]=x/(i+1);
        }

        for (i=0; i<n; i++){
          printf("\nB[%d] = %.2f" ,i, BB[i]);
        } 

        break;



        case 3: 
        printf("Введите размер массива: ");
        scanf("%d", &n); 
        if (n<0){ 
            printf ("ээх, давай по новой\n");
            break;
        }
        A = (int*)malloc(n * sizeof(int)); // Выделение памяти 
        for (i=0; i<n; i++){ //заполняем массив
          printf("A[%d] = ", i);
          scanf("%d", &A[i]);
        }
        nech = 0;
        for (i=n; i>=0; i--){
          if(A[i]%2 != 0){
            if(nech==0) nech = A[i];
            A[i]+=nech;
          }
        }

          printf("\nпоследнее нечетное число = %d" ,nech);
          for (i=0; i<n; i++) printf("\nA[%d] = %d" ,i, A[i]);

        break;

         case 4: 
        printf("Введите размер массива: ");
        scanf("%d", &n); 
        if (n<0){ 
            printf ("ээх, давай по новой\n");
            break;
        }
        A = (int*)malloc(n * sizeof(int)); // Выделение памяти 
        for (i=0; i<n; i++){ //заполняем массив
          printf("A[%d] = ", i);
          scanf("%d", &A[i]);
        }

        min=A[0];
        max = min;

        for (i=1; i<n; i++){
          if(min>A[i]){
            min=A[i];
            mi = i;
          }
          if(max<A[i]){
            max=A[i];
            ma = i;
          }
        }

        for (i=1; i<n; i++){
          if(min>A[i]) min=A[i];
          if(max<A[i]) max=A[i];
        }
        if(mi>ma){
          K = mi;
          mi = ma;
          ma = K;
        }

        for (i=mi+1; i<ma; i++){
          A[i]=0;
        }

          printf("\n получилось:" );
          for (i=0; i<n; i++) printf("\nA[%d] = %d" ,i, A[i]);

        break;


        case 5: 
        printf("Введите размер массива: ");
        scanf("%d", &n); 
        if (n<0){ 
            printf ("ээх, давай по новой\n");
            break;
        }
        A = (int*)malloc(n * sizeof(int)); // Выделение памяти 
        for (i=0; i<n; i++){ //заполняем массив
          printf("A[%d] = ", i);
          scanf("%d", &A[i]);
        }

        perv=A[0];
        for (i=1; i<n; i++){
          if(A[i-1]>A[i]){
            perv=A[i];
            A[i]=A[i-1];
            A[i-1]=perv;            
          } else{
            i=n;
          }
        }

        
          for (i=0; i<n; i++) printf("\nA[%d] = %d" ,i, A[i]);

        break;

      

      case 0:      
          printf ("пока\n");
          break;

      default:
          printf( "Неправильный ввод.\n" );       
    }
    
  }while(zzz!=0);

return 0;
}
